<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.logistics.mapper.ExportMapper" >
  <resultMap id="BaseResultMap" type="com.logistics.pojo.Export" >
    <id column="export_id" property="exportId" jdbcType="VARCHAR" />
    <result column="input_date" property="inputDate" jdbcType="TIMESTAMP" />
    <result column="contract_ids" property="contractIds" jdbcType="VARCHAR" />
    <result column="customer_contract" property="customerContract" jdbcType="VARCHAR" />
    <result column="lcno" property="lcno" jdbcType="VARCHAR" />
    <result column="consignee" property="consignee" jdbcType="VARCHAR" />
    <result column="marks" property="marks" jdbcType="VARCHAR" />
    <result column="shipment_port" property="shipmentPort" jdbcType="VARCHAR" />
    <result column="destination_port" property="destinationPort" jdbcType="VARCHAR" />
    <result column="transport_mode" property="transportMode" jdbcType="VARCHAR" />
    <result column="price_condition" property="priceCondition" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="box_nums" property="boxNums" jdbcType="BIGINT" />
    <result column="gross_weights" property="grossWeights" jdbcType="DOUBLE" />
    <result column="measurements" property="measurements" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_dept" property="createDept" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    export_id, input_date, contract_ids, customer_contract, lcno, consignee, marks, shipment_port, 
    destination_port, transport_mode, price_condition, remark, box_nums, gross_weights, 
    measurements, state, create_by, create_dept, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.logistics.pojo.ExportExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from export
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from export
    where export_id = #{exportId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from export
    where export_id = #{exportId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.logistics.pojo.ExportExample" >
    delete from export
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.logistics.pojo.Export" >
    insert into export (export_id, input_date, contract_ids, 
      customer_contract, lcno, consignee, 
      marks, shipment_port, destination_port, 
      transport_mode, price_condition, remark, 
      box_nums, gross_weights, measurements, 
      state, create_by, create_dept, 
      create_time)
    values (#{exportId,jdbcType=VARCHAR}, #{inputDate,jdbcType=TIMESTAMP}, #{contractIds,jdbcType=VARCHAR}, 
      #{customerContract,jdbcType=VARCHAR}, #{lcno,jdbcType=VARCHAR}, #{consignee,jdbcType=VARCHAR}, 
      #{marks,jdbcType=VARCHAR}, #{shipmentPort,jdbcType=VARCHAR}, #{destinationPort,jdbcType=VARCHAR}, 
      #{transportMode,jdbcType=VARCHAR}, #{priceCondition,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{boxNums,jdbcType=BIGINT}, #{grossWeights,jdbcType=DOUBLE}, #{measurements,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR}, #{createDept,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.logistics.pojo.Export" >
    insert into export
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="exportId != null" >
        export_id,
      </if>
      <if test="inputDate != null" >
        input_date,
      </if>
      <if test="contractIds != null" >
        contract_ids,
      </if>
      <if test="customerContract != null" >
        customer_contract,
      </if>
      <if test="lcno != null" >
        lcno,
      </if>
      <if test="consignee != null" >
        consignee,
      </if>
      <if test="marks != null" >
        marks,
      </if>
      <if test="shipmentPort != null" >
        shipment_port,
      </if>
      <if test="destinationPort != null" >
        destination_port,
      </if>
      <if test="transportMode != null" >
        transport_mode,
      </if>
      <if test="priceCondition != null" >
        price_condition,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="boxNums != null" >
        box_nums,
      </if>
      <if test="grossWeights != null" >
        gross_weights,
      </if>
      <if test="measurements != null" >
        measurements,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDept != null" >
        create_dept,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="exportId != null" >
        #{exportId,jdbcType=VARCHAR},
      </if>
      <if test="inputDate != null" >
        #{inputDate,jdbcType=TIMESTAMP},
      </if>
      <if test="contractIds != null" >
        #{contractIds,jdbcType=VARCHAR},
      </if>
      <if test="customerContract != null" >
        #{customerContract,jdbcType=VARCHAR},
      </if>
      <if test="lcno != null" >
        #{lcno,jdbcType=VARCHAR},
      </if>
      <if test="consignee != null" >
        #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="marks != null" >
        #{marks,jdbcType=VARCHAR},
      </if>
      <if test="shipmentPort != null" >
        #{shipmentPort,jdbcType=VARCHAR},
      </if>
      <if test="destinationPort != null" >
        #{destinationPort,jdbcType=VARCHAR},
      </if>
      <if test="transportMode != null" >
        #{transportMode,jdbcType=VARCHAR},
      </if>
      <if test="priceCondition != null" >
        #{priceCondition,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="boxNums != null" >
        #{boxNums,jdbcType=BIGINT},
      </if>
      <if test="grossWeights != null" >
        #{grossWeights,jdbcType=DOUBLE},
      </if>
      <if test="measurements != null" >
        #{measurements,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDept != null" >
        #{createDept,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.logistics.pojo.ExportExample" resultType="java.lang.Integer" >
    select count(*) from export
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update export
    <set >
      <if test="record.exportId != null" >
        export_id = #{record.exportId,jdbcType=VARCHAR},
      </if>
      <if test="record.inputDate != null" >
        input_date = #{record.inputDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.contractIds != null" >
        contract_ids = #{record.contractIds,jdbcType=VARCHAR},
      </if>
      <if test="record.customerContract != null" >
        customer_contract = #{record.customerContract,jdbcType=VARCHAR},
      </if>
      <if test="record.lcno != null" >
        lcno = #{record.lcno,jdbcType=VARCHAR},
      </if>
      <if test="record.consignee != null" >
        consignee = #{record.consignee,jdbcType=VARCHAR},
      </if>
      <if test="record.marks != null" >
        marks = #{record.marks,jdbcType=VARCHAR},
      </if>
      <if test="record.shipmentPort != null" >
        shipment_port = #{record.shipmentPort,jdbcType=VARCHAR},
      </if>
      <if test="record.destinationPort != null" >
        destination_port = #{record.destinationPort,jdbcType=VARCHAR},
      </if>
      <if test="record.transportMode != null" >
        transport_mode = #{record.transportMode,jdbcType=VARCHAR},
      </if>
      <if test="record.priceCondition != null" >
        price_condition = #{record.priceCondition,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.boxNums != null" >
        box_nums = #{record.boxNums,jdbcType=BIGINT},
      </if>
      <if test="record.grossWeights != null" >
        gross_weights = #{record.grossWeights,jdbcType=DOUBLE},
      </if>
      <if test="record.measurements != null" >
        measurements = #{record.measurements,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDept != null" >
        create_dept = #{record.createDept,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update export
    set export_id = #{record.exportId,jdbcType=VARCHAR},
      input_date = #{record.inputDate,jdbcType=TIMESTAMP},
      contract_ids = #{record.contractIds,jdbcType=VARCHAR},
      customer_contract = #{record.customerContract,jdbcType=VARCHAR},
      lcno = #{record.lcno,jdbcType=VARCHAR},
      consignee = #{record.consignee,jdbcType=VARCHAR},
      marks = #{record.marks,jdbcType=VARCHAR},
      shipment_port = #{record.shipmentPort,jdbcType=VARCHAR},
      destination_port = #{record.destinationPort,jdbcType=VARCHAR},
      transport_mode = #{record.transportMode,jdbcType=VARCHAR},
      price_condition = #{record.priceCondition,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      box_nums = #{record.boxNums,jdbcType=BIGINT},
      gross_weights = #{record.grossWeights,jdbcType=DOUBLE},
      measurements = #{record.measurements,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_dept = #{record.createDept,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.logistics.pojo.Export" >
    update export
    <set >
      <if test="inputDate != null" >
        input_date = #{inputDate,jdbcType=TIMESTAMP},
      </if>
      <if test="contractIds != null" >
        contract_ids = #{contractIds,jdbcType=VARCHAR},
      </if>
      <if test="customerContract != null" >
        customer_contract = #{customerContract,jdbcType=VARCHAR},
      </if>
      <if test="lcno != null" >
        lcno = #{lcno,jdbcType=VARCHAR},
      </if>
      <if test="consignee != null" >
        consignee = #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="marks != null" >
        marks = #{marks,jdbcType=VARCHAR},
      </if>
      <if test="shipmentPort != null" >
        shipment_port = #{shipmentPort,jdbcType=VARCHAR},
      </if>
      <if test="destinationPort != null" >
        destination_port = #{destinationPort,jdbcType=VARCHAR},
      </if>
      <if test="transportMode != null" >
        transport_mode = #{transportMode,jdbcType=VARCHAR},
      </if>
      <if test="priceCondition != null" >
        price_condition = #{priceCondition,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="boxNums != null" >
        box_nums = #{boxNums,jdbcType=BIGINT},
      </if>
      <if test="grossWeights != null" >
        gross_weights = #{grossWeights,jdbcType=DOUBLE},
      </if>
      <if test="measurements != null" >
        measurements = #{measurements,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDept != null" >
        create_dept = #{createDept,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where export_id = #{exportId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.logistics.pojo.Export" >
    update export
    set input_date = #{inputDate,jdbcType=TIMESTAMP},
      contract_ids = #{contractIds,jdbcType=VARCHAR},
      customer_contract = #{customerContract,jdbcType=VARCHAR},
      lcno = #{lcno,jdbcType=VARCHAR},
      consignee = #{consignee,jdbcType=VARCHAR},
      marks = #{marks,jdbcType=VARCHAR},
      shipment_port = #{shipmentPort,jdbcType=VARCHAR},
      destination_port = #{destinationPort,jdbcType=VARCHAR},
      transport_mode = #{transportMode,jdbcType=VARCHAR},
      price_condition = #{priceCondition,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      box_nums = #{boxNums,jdbcType=BIGINT},
      gross_weights = #{grossWeights,jdbcType=DOUBLE},
      measurements = #{measurements,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_dept = #{createDept,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where export_id = #{exportId,jdbcType=VARCHAR}
  </update>
</mapper>