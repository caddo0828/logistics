<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.logistics.mapper.ExportProductMapper" >
  <resultMap id="BaseResultMap" type="com.logistics.pojo.ExportProduct" >
    <id column="export_product_id" property="exportProductId" jdbcType="VARCHAR" />
    <result column="export_id" property="exportId" jdbcType="VARCHAR" />
    <result column="factory_id" property="factoryId" jdbcType="VARCHAR" />
    <result column="product_no" property="productNo" jdbcType="VARCHAR" />
    <result column="packing_unit" property="packingUnit" jdbcType="VARCHAR" />
    <result column="cnumber" property="cnumber" jdbcType="BIGINT" />
    <result column="box_num" property="boxNum" jdbcType="BIGINT" />
    <result column="gross_weight" property="grossWeight" jdbcType="DOUBLE" />
    <result column="net_weight" property="netWeight" jdbcType="DOUBLE" />
    <result column="size_length" property="sizeLength" jdbcType="DOUBLE" />
    <result column="size_width" property="sizeWidth" jdbcType="DOUBLE" />
    <result column="size_height" property="sizeHeight" jdbcType="DOUBLE" />
    <result column="ex_price" property="exPrice" jdbcType="DOUBLE" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="tax" property="tax" jdbcType="DOUBLE" />
    <result column="order_no" property="orderNo" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    export_product_id, export_id, factory_id, product_no, packing_unit, cnumber, box_num, 
    gross_weight, net_weight, size_length, size_width, size_height, ex_price, price, 
    tax, order_no
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.logistics.pojo.ExportProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from export_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from export_product
    where export_product_id = #{exportProductId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from export_product
    where export_product_id = #{exportProductId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.logistics.pojo.ExportProductExample" >
    delete from export_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.logistics.pojo.ExportProduct" >
    insert into export_product (export_product_id, export_id, factory_id, 
      product_no, packing_unit, cnumber, 
      box_num, gross_weight, net_weight, 
      size_length, size_width, size_height, 
      ex_price, price, tax, order_no
      )
    values (#{exportProductId,jdbcType=VARCHAR}, #{exportId,jdbcType=VARCHAR}, #{factoryId,jdbcType=VARCHAR}, 
      #{productNo,jdbcType=VARCHAR}, #{packingUnit,jdbcType=VARCHAR}, #{cnumber,jdbcType=BIGINT}, 
      #{boxNum,jdbcType=BIGINT}, #{grossWeight,jdbcType=DOUBLE}, #{netWeight,jdbcType=DOUBLE}, 
      #{sizeLength,jdbcType=DOUBLE}, #{sizeWidth,jdbcType=DOUBLE}, #{sizeHeight,jdbcType=DOUBLE}, 
      #{exPrice,jdbcType=DOUBLE}, #{price,jdbcType=DOUBLE}, #{tax,jdbcType=DOUBLE}, #{orderNo,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.logistics.pojo.ExportProduct" >
    insert into export_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="exportProductId != null" >
        export_product_id,
      </if>
      <if test="exportId != null" >
        export_id,
      </if>
      <if test="factoryId != null" >
        factory_id,
      </if>
      <if test="productNo != null" >
        product_no,
      </if>
      <if test="packingUnit != null" >
        packing_unit,
      </if>
      <if test="cnumber != null" >
        cnumber,
      </if>
      <if test="boxNum != null" >
        box_num,
      </if>
      <if test="grossWeight != null" >
        gross_weight,
      </if>
      <if test="netWeight != null" >
        net_weight,
      </if>
      <if test="sizeLength != null" >
        size_length,
      </if>
      <if test="sizeWidth != null" >
        size_width,
      </if>
      <if test="sizeHeight != null" >
        size_height,
      </if>
      <if test="exPrice != null" >
        ex_price,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="tax != null" >
        tax,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="exportProductId != null" >
        #{exportProductId,jdbcType=VARCHAR},
      </if>
      <if test="exportId != null" >
        #{exportId,jdbcType=VARCHAR},
      </if>
      <if test="factoryId != null" >
        #{factoryId,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null" >
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="packingUnit != null" >
        #{packingUnit,jdbcType=VARCHAR},
      </if>
      <if test="cnumber != null" >
        #{cnumber,jdbcType=BIGINT},
      </if>
      <if test="boxNum != null" >
        #{boxNum,jdbcType=BIGINT},
      </if>
      <if test="grossWeight != null" >
        #{grossWeight,jdbcType=DOUBLE},
      </if>
      <if test="netWeight != null" >
        #{netWeight,jdbcType=DOUBLE},
      </if>
      <if test="sizeLength != null" >
        #{sizeLength,jdbcType=DOUBLE},
      </if>
      <if test="sizeWidth != null" >
        #{sizeWidth,jdbcType=DOUBLE},
      </if>
      <if test="sizeHeight != null" >
        #{sizeHeight,jdbcType=DOUBLE},
      </if>
      <if test="exPrice != null" >
        #{exPrice,jdbcType=DOUBLE},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="tax != null" >
        #{tax,jdbcType=DOUBLE},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.logistics.pojo.ExportProductExample" resultType="java.lang.Integer" >
    select count(*) from export_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update export_product
    <set >
      <if test="record.exportProductId != null" >
        export_product_id = #{record.exportProductId,jdbcType=VARCHAR},
      </if>
      <if test="record.exportId != null" >
        export_id = #{record.exportId,jdbcType=VARCHAR},
      </if>
      <if test="record.factoryId != null" >
        factory_id = #{record.factoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.productNo != null" >
        product_no = #{record.productNo,jdbcType=VARCHAR},
      </if>
      <if test="record.packingUnit != null" >
        packing_unit = #{record.packingUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.cnumber != null" >
        cnumber = #{record.cnumber,jdbcType=BIGINT},
      </if>
      <if test="record.boxNum != null" >
        box_num = #{record.boxNum,jdbcType=BIGINT},
      </if>
      <if test="record.grossWeight != null" >
        gross_weight = #{record.grossWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.netWeight != null" >
        net_weight = #{record.netWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.sizeLength != null" >
        size_length = #{record.sizeLength,jdbcType=DOUBLE},
      </if>
      <if test="record.sizeWidth != null" >
        size_width = #{record.sizeWidth,jdbcType=DOUBLE},
      </if>
      <if test="record.sizeHeight != null" >
        size_height = #{record.sizeHeight,jdbcType=DOUBLE},
      </if>
      <if test="record.exPrice != null" >
        ex_price = #{record.exPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.tax != null" >
        tax = #{record.tax,jdbcType=DOUBLE},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update export_product
    set export_product_id = #{record.exportProductId,jdbcType=VARCHAR},
      export_id = #{record.exportId,jdbcType=VARCHAR},
      factory_id = #{record.factoryId,jdbcType=VARCHAR},
      product_no = #{record.productNo,jdbcType=VARCHAR},
      packing_unit = #{record.packingUnit,jdbcType=VARCHAR},
      cnumber = #{record.cnumber,jdbcType=BIGINT},
      box_num = #{record.boxNum,jdbcType=BIGINT},
      gross_weight = #{record.grossWeight,jdbcType=DOUBLE},
      net_weight = #{record.netWeight,jdbcType=DOUBLE},
      size_length = #{record.sizeLength,jdbcType=DOUBLE},
      size_width = #{record.sizeWidth,jdbcType=DOUBLE},
      size_height = #{record.sizeHeight,jdbcType=DOUBLE},
      ex_price = #{record.exPrice,jdbcType=DOUBLE},
      price = #{record.price,jdbcType=DOUBLE},
      tax = #{record.tax,jdbcType=DOUBLE},
      order_no = #{record.orderNo,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.logistics.pojo.ExportProduct" >
    update export_product
    <set >
      <if test="exportId != null" >
        export_id = #{exportId,jdbcType=VARCHAR},
      </if>
      <if test="factoryId != null" >
        factory_id = #{factoryId,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null" >
        product_no = #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="packingUnit != null" >
        packing_unit = #{packingUnit,jdbcType=VARCHAR},
      </if>
      <if test="cnumber != null" >
        cnumber = #{cnumber,jdbcType=BIGINT},
      </if>
      <if test="boxNum != null" >
        box_num = #{boxNum,jdbcType=BIGINT},
      </if>
      <if test="grossWeight != null" >
        gross_weight = #{grossWeight,jdbcType=DOUBLE},
      </if>
      <if test="netWeight != null" >
        net_weight = #{netWeight,jdbcType=DOUBLE},
      </if>
      <if test="sizeLength != null" >
        size_length = #{sizeLength,jdbcType=DOUBLE},
      </if>
      <if test="sizeWidth != null" >
        size_width = #{sizeWidth,jdbcType=DOUBLE},
      </if>
      <if test="sizeHeight != null" >
        size_height = #{sizeHeight,jdbcType=DOUBLE},
      </if>
      <if test="exPrice != null" >
        ex_price = #{exPrice,jdbcType=DOUBLE},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="tax != null" >
        tax = #{tax,jdbcType=DOUBLE},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=INTEGER},
      </if>
    </set>
    where export_product_id = #{exportProductId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.logistics.pojo.ExportProduct" >
    update export_product
    set export_id = #{exportId,jdbcType=VARCHAR},
      factory_id = #{factoryId,jdbcType=VARCHAR},
      product_no = #{productNo,jdbcType=VARCHAR},
      packing_unit = #{packingUnit,jdbcType=VARCHAR},
      cnumber = #{cnumber,jdbcType=BIGINT},
      box_num = #{boxNum,jdbcType=BIGINT},
      gross_weight = #{grossWeight,jdbcType=DOUBLE},
      net_weight = #{netWeight,jdbcType=DOUBLE},
      size_length = #{sizeLength,jdbcType=DOUBLE},
      size_width = #{sizeWidth,jdbcType=DOUBLE},
      size_height = #{sizeHeight,jdbcType=DOUBLE},
      ex_price = #{exPrice,jdbcType=DOUBLE},
      price = #{price,jdbcType=DOUBLE},
      tax = #{tax,jdbcType=DOUBLE},
      order_no = #{orderNo,jdbcType=INTEGER}
    where export_product_id = #{exportProductId,jdbcType=VARCHAR}
  </update>
</mapper>